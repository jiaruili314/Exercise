/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */

 //递归
class Solution {
    public boolean isSymmetric(TreeNode root) {
        if(root == null)
            return true;
        else
            return check(root.left,root.right);
    }

    boolean check(TreeNode p, TreeNode q){
        if (p == null && q == null)
            return true;
        if (p ==null || q == null)
            return false;
        return p.val == q.val && check(p.left,q.right) &&check(p.right, q.left);
    }
}

//迭代
class Solution {
    public boolean isSymmetric(TreeNode root) {
        return check(root,root);
    }
    boolean check(TreeNode u, TreeNode v){
        Queue<TreeNode> q = new LinkedList<TreeNode>();
        q.offer(u);
        q.offer(v);
        while(!q.isEmpty()){
            u = q.poll();
            v = q.poll();

            if (u == null && v == null)
                continue;
            if ((u ==null || v == null) || (u.val != v.val))
                return false;
            q.offer(u.left);
            q.offer(v.right);

            
            q.offer(u.right);
            q.offer(v.left);

        } 
        return true;
    }
}
